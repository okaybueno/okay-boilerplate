// Generic Grid Wrapper Class
@mixin grid-wrapper($breakpoints: null) {
  @if (index($breakpoints, 'mobile') or $breakpoints == null) {
    max-width: 100%;
    width: 100%;
    box-sizing: border-box;
    padding-left: $grid-o-gutter--dtp;
    padding-right: $grid-o-gutter--dtp;
  }

  @if (index($breakpoints, 'tablet') or $breakpoints == null) {
    @include mq('tablet') {
      padding-left: $grid-o-gutter--tab;
      padding-right: $grid-o-gutter--tab;
    }
  }

  @if (index($breakpoints, 'mobile') or $breakpoints == null) {
    @include mq('mobile') {
      padding-left: $grid-o-gutter--mob;
      padding-right: $grid-o-gutter--mob;
    }
  }
}

// formula for grid-el functions is refactored from:
 //@return calc((100% / #{$grid-columns} - #{$grid-i-gutter--dtp} / #{$grid-columns} * (#{$grid-columns} - 1)) * #{$cols} + #{$grid-i-gutter--dtp} * #{$cols});
@function grid-el-dtp($cols, $mod: false) {
  @if $mod {
      @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--dtp * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--dtp * ($cols - 1))} + #{$mod});
  } @else {
      @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--dtp * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--dtp * ($cols - 1))});
  }
}

@function grid-el-tab($cols, $mod: false) {
  @if $mod {
    @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--tab * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--tab * ($cols - 1))} + #{$mod});
  } @else {
    @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--tab * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--tab * ($cols - 1))});
  }
}

@function grid-el-mob($cols, $mod: false) {
  @if $mod {
    @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--mob * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--mob * ($cols - 1))} + #{$mod});
  } @else {
    @return calc((100% / #{$grid-columns / $cols}) - #{(($grid-i-gutter--mob * ($grid-columns - 1)) / ($grid-columns / $cols)) - ($grid-i-gutter--mob * ($cols - 1))});
  }
}

@mixin grid-el-responsive($desktop-cols: false, $tablet-cols: false, $mobile-cols: false) {
  // variables specify the number of columns which each individual element spans
  @if( $desktop-cols ) {
    width: grid-el-dtp($desktop-cols);
  }

  @if( $tablet-cols) {
    @include mq('tablet') {
      width: grid-el-tab($tablet-cols);
    }
  }

  @if( $mobile-cols ) {
    @include mq('mobile') {
      width: grid-el-mob($mobile-cols);
    }
  }
}

@mixin grid-el-row($row-els-desktop: null, $row-els-tablet: null, $row-els-mobile: null ) {
  // variables specify the number of elements per row
  max-width: 100%;

  @if( $row-els-desktop) {
    margin-right: $grid-i-gutter--dtp;
    &:nth-child(#{$row-els-desktop}n) {
      margin-right: 0;
    }
  }

  @if( $row-els-tablet) {
    @include mq('tablet') {
      margin-right: $grid-i-gutter--tab;
      &:nth-child(#{$row-els-desktop}n) {
        margin-right: $grid-i-gutter--tab;
      }
      &:nth-child(#{$row-els-tablet}n) {
        margin-right: 0;
      }
    }
  }

  @if( $row-els-mobile ) {
    @include mq('mobile') {
      margin-right: $grid-i-gutter--mob;
      &:nth-child(#{$row-els-tablet}n) {
        margin-right: $grid-i-gutter--mob;
      }
      &:nth-child(#{$row-els-mobile}n) {
        margin-right: 0;
      }
    }
  }
}

// example usage: @include property-with-gutter('right');
@mixin property-with-gutter($property, $breakpoints: null, $grid-gutter: 'outer') {
  @if (index($breakpoints, 'desktop') or $breakpoints == null) {
    #{$property}: if($grid-gutter == 'outer', $grid-o-gutter--dtp, $grid-i-gutter--dtp);
  }

  @if (index($breakpoints, 'tablet') or $breakpoints == null) {
    @include mq('tablet') {
      #{$property}: if($grid-gutter == 'outer', $grid-o-gutter--tab, $grid-i-gutter--tab);
    }
  }

  @if (index($breakpoints, 'mobile') or $breakpoints == null) {
    @include mq('mobile') {
      #{$property}: if($grid-gutter == 'outer', $grid-o-gutter--mob, $grid-i-gutter--mob);
    }
  }
}


@mixin after-fill {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: z(content);
}

@mixin image-fit {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;

  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    height: auto;
    min-height: 100%;
  }
}

@mixin backface-visibility {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: perspective(1px) translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
}
